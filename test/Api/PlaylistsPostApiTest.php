<?php
/**
 * PlaylistsPostApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Web API v3
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.20
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * PlaylistsPostApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PlaylistsPostApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for v3PlaylistsFollowPost
     *
     * Adds the playlists of another accounts to the own saved (followed) playlists..
     *
     */
    public function testV3PlaylistsFollowPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdFollowPost
     *
     * Add the playlist of another account to the own saved (followed) playlists..
     *
     */
    public function testV3PlaylistsPlaylistIdFollowPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdItemsPositionsPost
     *
     * Sets the positions off all playlist items..
     *
     */
    public function testV3PlaylistsPlaylistIdItemsPositionsPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdItemsPost
     *
     * Appends the given telecasts to the playlist..
     *
     */
    public function testV3PlaylistsPlaylistIdItemsPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdItemsTelecastIdPositionsPositionPost
     *
     * Sets the given telecast at the given index in the playlist..
     *
     */
    public function testV3PlaylistsPlaylistIdItemsTelecastIdPositionsPositionPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdItemsTelecastIdPost
     *
     * Appends the given telecast to the playlist..
     *
     */
    public function testV3PlaylistsPlaylistIdItemsTelecastIdPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdItemsTelecastIdViewPost
     *
     * Sets the given telecast of the given the playlist as last viewed. This telecast will be used as start video when the playlist is resumed..
     *
     */
    public function testV3PlaylistsPlaylistIdItemsTelecastIdViewPost()
    {
    }

    /**
     * Test case for v3PlaylistsPlaylistIdPost
     *
     * Updates an existing playlist..
     *
     */
    public function testV3PlaylistsPlaylistIdPost()
    {
    }

    /**
     * Test case for v3PlaylistsPost
     *
     * Creates a new  playlist..
     *
     */
    public function testV3PlaylistsPost()
    {
    }

    /**
     * Test case for v3PlaylistsWatchLaterItemsPost
     *
     * Appends the given telecasts to the default playlist \"Sp�ter ansehen\"..
     *
     */
    public function testV3PlaylistsWatchLaterItemsPost()
    {
    }

    /**
     * Test case for v3PlaylistsWatchLaterItemsTelecastIdPost
     *
     * Appends the given telecast to the default playlist \"Später ansehen\"..
     *
     */
    public function testV3PlaylistsWatchLaterItemsTelecastIdPost()
    {
    }
}
